<? $id = isset($this->overruleId) ? $this->overruleId : $this->id; ?>
<input class="checkbox-select-item" style="display:none" type="checkbox" name="ids[]" value="<?=$this->escapeHtmlAttr($id) ?>" />
<input type="hidden" name="idsAll[]" value="<?=$this->escapeHtmlAttr($id) ?>"/>
<i class="fa fa-check-square checkToggleOff" onClick="ToggleRecordCheck($(this).next()); ToggleRecordCheck($(this));"></i>
<i class="fa fa-square-o checkToggleOn" onClick="ToggleRecordCheck($(this).prev()); ToggleRecordCheck($(this));"></i>
<script type="text/javascript">
  function ToggleRecordCheck(item) {
    if(item.hasClass('checkToggleOn')) {
      item.removeClass('checkToggleOn');
      item.addClass('checkToggleOff');
    } else {
      item.removeClass('checkToggleOff');
      item.addClass('checkToggleOn');

      var target = item.prevAll('.checkbox-select-item').get(0);
      var parentForm = $(target).parents('.ajaxItem').siblings('form');
      parentForm.find('.checkbox-select-item[value=\'' + $(target).attr('value') + '\']').prop('checked',item.hasClass('fa-check-square'));
      parentForm.find('.checkbox-select-all').prop('checked', true);
      parentForm.find('.checkbox-select-item').each( function() {
        parentForm.find('.checkbox-select-all').prop('checked', parentForm.find('.checkbox-select-all').prop('checked') && this.checked);
      } );
      setTimeout( function() {
        ScanBulkButton(parentForm);
      } );
    }
  }
</script>
