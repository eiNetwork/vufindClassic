<div class="EIN-col-m-12" style="height:20px"></div>
<div class="EIN-col-m-12">
  <? if (!empty($this->facetList) || !empty($this->checkboxFacets)): ?>
    <fieldset class="EIN-col-m-12">
      <label class="EIN-col-m-12 advSearchGroupTitle center"><?=$this->transEsc('Limit To')?></label>
      <? if (!empty($this->checkboxFacets)): ?>
        <?=$this->render('search/advanced/checkbox-filters.phtml')?>
      <? endif; ?>
      <div class="EIN-col-m-12">
        <? foreach ($this->facetList as $field => $list): ?>
          <table style="width:100%"><tr>
            <td class="EIN-hide-m EIN-col-t-2">&nbsp;</td>
            <td class="EIN-col-m-12 EIN-col-t-8">
              <div class="panel panel-advSearchAccordion">
                <div class="panel-heading">
                  <h4 class="panel-title">
                    <a data-toggle="collapse" class="facetAccordionTitle collapsed" href="#facet<?=$this->escapeHtmlAttr(str_replace(' ', '', $field))?>">
                      <span class="greenCheck" style="float:none;display:none"><span class="sr-only">Checked</span><i class="fa fa-check"></i></span>
                      <?=$this->transEsc($list['label'])?>
                      <i class="fa fa-caret-down"></i>
                      <i class="fa fa-caret-up"></i>
                    </a>
                  </h4>
                </div>
                <div id="facet<?=$this->escapeHtmlAttr(str_replace(' ', '', $field))?>" class="facetAccordionContent panel-collapse collapse">
                  <div class="panel-body">
                    <ul class="facetAccordionList">
                      <? if( $field != "format" ): ?>
                        <?
                          // Sort the current facet list alphabetically; we'll use this data
                          // along with the foreach below to display facet options in the
                          // correct order.
                          $sorted = array();
                          foreach ($list['list'] as $i => $value) {
                            if (!empty($value['displayText'])) {
                              $sorted[$i] = $value['displayText'];
                            }
                          }
                          natcasesort($sorted);
                        ?>
                        <? foreach ($sorted as $i => $display): ?>
                          <? $value = $list['list'][$i]; ?>
                          <li class="facetOffset0" value="<?=$this->escapeHtmlAttr(($value['operator'] == 'OR' ? '~' : '') . $field . ':"' . $value['value'] . '"')?>">
                            <span class="sr-only">
                              <?=$this->escapeHtml($display)?>
                              <input type="checkbox" onClick="$(this).parent().siblings('.facetToggleOn').click()" />
                            </span>
                            <span aria-hidden="true" class="facetToggleOff" onClick="ToggleFacet($(this).next());ToggleFacet($(this));CleanChecks();"><span class="sr-only">Checked</span><i class="fa fa-check-square" style="margin-left:-1px"></i></span>
                            <span aria-hidden="true" class="facetToggleOn" onClick="ToggleFacet($(this).prev());ToggleFacet($(this));CleanChecks();"><i class="fa fa-square-o"></i></span>
                            <span aria-hidden="true"><?=$this->escapeHtml($display)?></span>
                          </li>
                        <? endforeach; ?>
                      <? else: ?>
                        <? $inputVals = $list['list']; ?>
                        <? $outputVals = []; ?>
                        <? foreach($this->formatCategories->types as $category): ?>
                          <? $formatTypes = explode(",", $category); ?>
                          <? $categoryName = array_splice($formatTypes, 0, 1)[0]; ?>
                          <? $outputVals[$categoryName] = ["someApplied" => false, "allApplied" => true, "children" => []]; ?>
                          <? foreach( $formatTypes as $needleFormat): ?>
                            <? foreach( $inputVals as $index => $haystackFormat): ?>
                              <? if( $needleFormat == $haystackFormat["value"] ): ?>
                                <? $outputVals[$categoryName]["children"][] = array_splice($inputVals, $index, 1)[0]; ?>
                                <? $outputVals[$categoryName]["someApplied"] |= $haystackFormat["isApplied"]; ?>
                                <? $outputVals[$categoryName]["allApplied"] &= $haystackFormat["isApplied"]; ?>
                              <? endif; ?>
                            <? endforeach; ?>
                          <? endforeach; ?>
                        <? endforeach; ?>
                        <? $bookTypes = ["Print Book", "eBook", "Audio Book"]; $showBooks = false; foreach($bookTypes as $type): $showBooks |= (count($outputVals[$type]["children"]) > 0); endforeach; ?>
                        <? if( $showBooks ): ?>
                          <li class="facetOffset0">
                            <span class="sr-only">
                              <?=$this->escapeHtml("Books")?>
                              <input type="checkbox" onClick="$(this).parent().siblings('.facetToggleOn').click()" />
                            </span>
                            <span aria-hidden="true" class="facetToggleOff categoryCheck" onClick="ToggleCategory($(this));CleanChecks();"><i class="fa fa-check-square" style="margin-left:-1px"></i></span>
                            <span aria-hidden="true" class="facetToggleOff categoryCheck" onClick="ToggleCategory($(this));CleanChecks();"><i class="fa fa-minus-square-o"></i></span>
                            <span aria-hidden="true" class="facetToggleOn categoryCheck" onClick="ToggleCategory($(this));CleanChecks();"><i class="fa fa-square-o"></i></span>
                            <span aria-hidden="true"><?=$this->escapeHtml("Books")?></span>
                          </li>
                        <? endif; ?>
                        <? foreach( $outputVals as $type => $thisArray ): ?>
                          <? if( count($thisArray["children"]) > 0 ): ?>
                            <li class="facetOffset<?=(in_array($type, $bookTypes) ? "1" : "0")?>">
                              <span class="sr-only">
                                <?=$this->escapeHtml($type)?>
                                <input type="checkbox" onClick="$(this).parent().siblings('.facetToggleOn').click()" />
                              </span>
                              <span aria-hidden="true" class="facetToggleOff categoryCheck" onClick="ToggleCategory($(this));CleanChecks();"><i class="fa fa-check-square" style="margin-left:-1px"></i></span>
                              <span aria-hidden="true" class="facetToggleOff categoryCheck" onClick="ToggleCategory($(this));CleanChecks();"><i class="fa fa-minus-square-o"></i></span>
                              <span aria-hidden="true" class="facetToggleOn categoryCheck" onClick="ToggleCategory($(this));CleanChecks();"><i class="fa fa-square-o"></i></span>
                              <span aria-hidden="true"><?=$this->escapeHtml($type)?></span>
                            </li>
                            <? foreach( $thisArray["children"] as $thisFacet ): ?>
                              <li class="facetOffset<?=(in_array($type, $bookTypes) ? "2" : "1")?>" value="<?=$this->escapeHtmlAttr(($thisFacet['operator'] == 'OR' ? '~' : '') . $field . ':"' . $thisFacet['value'] . '"')?>">
                                <span class="sr-only">
                                  <?=$this->escapeHtml($thisFacet['displayText'])?>
                                  <input type="checkbox" onClick="$(this).parent().siblings('.facetToggleOn').click()" />
                                </span>
                                <span aria-hidden="true" class="facetToggleOff" onClick="ToggleFacet($(this).next());ToggleFacet($(this));CleanChecks();"><i class="fa fa-check-square" style="margin-left:-1px"></i></span>
                                <span aria-hidden="true" class="facetToggleOn" onClick="ToggleFacet($(this).prev());ToggleFacet($(this));CleanChecks();"><i class="fa fa-square-o"></i></span>
                                <span aria-hidden="true"><?=$this->escapeHtml($thisFacet['displayText'])?></span>
                              </li>
                            <? endforeach; ?>
                          <? endif; ?>
                        <? endforeach; ?>
                        <? if( count($inputVals) > 0 ): ?>
                          <li class="facetOffset0">
                            <span class="sr-only">
                              <?=$this->escapeHtml("Other")?>
                             <input type="checkbox" onClick="$(this).parent().siblings('.facetToggleOn').click()" />
                            </span>
                            <span aria-hidden="true" class="facetToggleOff categoryCheck" onClick="ToggleCategory($(this));CleanChecks(false);"><i class="fa fa-check-square" style="margin-left:-1px"></i></span>
                            <span aria-hidden="true" class="facetToggleOff categoryCheck" onClick="ToggleCategory($(this));CleanChecks(false);"><i class="fa fa-minus-square-o"></i></span>
                            <span aria-hidden="true" class="facetToggleOn categoryCheck" onClick="ToggleCategory($(this));CleanChecks(false);"><i class="fa fa-square-o"></i></span>
                            <span aria-hidden="true"><?=$this->escapeHtml("Other")?></span>
                          </li>
                          <? usort($inputVals, function ($format1,$format2) { return strcmp($format1["displayText"], $format2["displayText"]); }); ?>
                          <? foreach( $inputVals as $thisFacet ): ?>
                            <li class="facetOffset1" value="<?=$this->escapeHtmlAttr(($thisFacet['operator'] == 'OR' ? '~' : '') . $field . ':"' . $thisFacet['value'] . '"')?>">
                              <span class="sr-only">
                                <?=$this->escapeHtml($thisFacet['displayText'])?>
                                <input type="checkbox" onClick="$(this).parent().siblings('.facetToggleOn').click()" />
                              </span>
                              <span aria-hidden="true" class="facetToggleOff" onClick="ToggleFacet($(this).next());ToggleFacet($(this));CleanChecks();"><i class="fa fa-check-square" style="margin-left:-1px"></i></span>
                              <span aria-hidden="true" class="facetToggleOn" onClick="ToggleFacet($(this).prev());ToggleFacet($(this));CleanChecks();"><i class="fa fa-square-o"></i></span>
                              <span aria-hidden="true"><?=$this->escapeHtml($thisFacet['displayText'])?></span>
                            </li>
                          <? endforeach; ?>
                        <? endif; ?>
                      <? endif; ?>
                    </ul>
                  </div>
                </div>
                <select class="form-control" id="limit_<?=$this->escapeHtmlAttr(str_replace(' ', '', $field))?>" name="filter[]" multiple="multiple" size="10" style="display:none">
                  <? foreach ($list['list'] as $item): ?>
                    <option value="<?=$this->escapeHtmlAttr(($item['operator'] == 'OR' ? '~' : '') . $field . ':"' . $item['value'] . '"')?>"<?=(isset($item['selected']) && $item['selected'])?' selected="selected"':''?>><?=$this->escapeHtml($item['displayText'])?></option>
                  <? endforeach; ?>
                </select>
              </div>
            </td>
            <td class="EIN-hide-m EIN-col-t-2">&nbsp;</td>
          </tr></table>
        <? endforeach; ?>
      </div>
    </fieldset>
  <? endif; ?>
  <div class="EIN-col-m-12">
    <? if (isset($this->illustratedLimit)): ?>
      <fieldset class="EIN-col-m-12">
          <table style="width:100%"><tr>
            <td class="EIN-hide-m EIN-col-t-2">&nbsp;</td>
            <td class="EIN-col-m-12 EIN-col-t-8">
            <div class="panel panel-advSearchAccordion">
              <div class="panel-heading">
                <h4 class="panel-title">
                  <a data-toggle="collapse" class="facetAccordionTitle collapsed" href="#facetIllustrated">
                    <span class="greenCheck" style="float:none;display:none"><span class="sr-only">Checked</span><i class="fa fa-check"></i></span>
                    <?=$this->transEsc("Illustrated")?>
                    <i class="fa fa-caret-down"></i>
                    <i class="fa fa-caret-up"></i>
                  </a>
                </h4>
              </div>
              <div id="facetIllustrated" class="facetAccordionContent panel-collapse collapse">
                <div class="panel-body">
                  <ul class="facetAccordionList">
                    <? foreach ($this->illustratedLimit as $current): ?>
                      <li class="facetOffset0" value="<?=$this->escapeHtmlAttr($current['value'])?>">
                        <span class="sr-only">
                          <?=$this->transEsc($current['text'])?>
                          <input id="illustrated_<?=$this->escapeHtmlAttr($current['value'])?>" type="radio" name="illustration" value="<?=$this->escapeHtmlAttr($current['value'])?>"<?=$current['selected']?' checked="checked"':''?> onClick="$(this).parent().siblings('.facetToggleOn').click()" />
                        </span>
                        <span aria-hidden="true" class="facetToggle<?=($current['selected']?"On":"Off") . (($current['value']==-1)?"":" showCheck")?>" onClick="ChangeRadio($(this));CleanChecks();"><i class="fa fa-check-circle"></i></span>
                        <span aria-hidden="true" class="facetToggle<?=$current['selected']?"Off":"On"?>" onClick="ChangeRadio($(this));CleanChecks();"><i class="fa fa-circle-o"></i></span>
                        <span aria-hidden="true" ><?=$this->transEsc($current['text'])?></span>
                      </li>
                    <? endforeach; ?>
                  </ul>
                </div>
              </div>
            </div>
          </td>
          <td class="EIN-hide-m EIN-col-t-2 EIN-col-2">&nbsp;</td>
        </tr></table>
      </fieldset>
    <? endif; ?>
    <div class="EIN-col-m-12" style="height:10px"></div>
    <?=$this->render('search/advanced/limit.phtml')?>
    <?=$this->render('search/advanced/ranges.phtml')?>
  </div>
</div>
<script type="text/javascript">
  function ChangeRadio(item) {
    $(item).parents('.panel').find('.fa-check-circle').parent().removeClass('facetToggleOn').addClass('facetToggleOff');
    $(item).parents('.panel').find('.fa-circle-o').parent().removeClass('facetToggleOff').addClass('facetToggleOn');
    $(item).parents('li').find('.fa-check-circle').parent().removeClass('facetToggleOff').addClass('facetToggleOn');
    $(item).parents('li').find('.fa-circle-o').parent().removeClass('facetToggleOn').addClass('facetToggleOff');
    $(item).parents('.panel').find('input[value="' + $(item).parent().attr('value').replace(/\"/g, "\\\"")+ '"]').prop('checked', true);
  }

  function ToggleFacet(item) {
    if(item.hasClass('facetToggleOn')) {
      item.removeClass('facetToggleOn');
      item.addClass('facetToggleOff');
    } else {
      item.removeClass('facetToggleOff');
      item.addClass('facetToggleOn');

      $(item).parents('.panel').find('option[value="' + $(item).parent().attr('value').replace(/\"/g, "\\\"")+ '"]').prop('selected', $(item).children('.fa-check-square').length > 0);
      $(item).siblings('.sr-only').find('input').prop('checked', $(item).children('.fa-check-square').length > 0);
    }
  }

  function ToggleCategory(item) {
    // flip all of the descendents to off if the clicked category is on, otherwise flip them all to on
    var p = $(item).parent().get()[0];
    var stopSign = "." + p.className + ((p.className == "facetOffset1") ? ",.facetOffset0" : "");
    var targetClass = $(item).children(".fa-check-square").length ? "fa-square-o" : "fa-check-square";
    $(p).nextUntil(stopSign).find('.' + targetClass).parent().removeClass('facetToggleOff').addClass('facetToggleOn');
    $(p).nextUntil(stopSign).find('.fa').not('.' + targetClass).parent().removeClass('facetToggleOn').addClass('facetToggleOff');
    $(p).nextUntil(stopSign).find('.facetToggleOn').not('.categoryCheck').each( function() {
      $(this).parents('.panel').find('option[value="' + $(this).parent().attr('value').replace(/\"/g, "\\\"")+ '"]').prop('selected', (targetClass == "fa-check-square"));
      $(this).siblings('.sr-only').find('input').prop('checked', (targetClass == "fa-check-square"));
    } );
  }

  function CleanChecks() {
    // fix all of the category states in the format section
    $.each($('#facetformat').find('.facetOffset1'), function(index, item) {
      // ignore the ones that aren't categories
      if( $(item).children('.categoryCheck').length > 0 ) {
        $(item).find('.fa').parent().removeClass('facetToggleOn');
        $(item).find('.fa').parent().addClass('facetToggleOff');
        $(item).find('.sr-only').children('input').prop("checked", false);
        if( $(item).nextUntil('.facetOffset1,.facetOffset0').length == $(item).nextUntil('.facetOffset1,.facetOffset0').find('.facetToggleOn .fa-check-square').length ) {
          $(item).find('.fa-check-square').parent().removeClass('facetToggleOff');
          $(item).find('.fa-check-square').parent().addClass('facetToggleOn');
          $(item).find('.sr-only').children('input').prop("checked", true);
        } else if( $(item).nextUntil('.facetOffset1,.facetOffset0').find('.facetToggleOn .fa-check-square').length > 0 ) {
          $(item).find('.fa-minus-square-o').parent().removeClass('facetToggleOff');
          $(item).find('.fa-minus-square-o').parent().addClass('facetToggleOn');
        } else {
          $(item).find('.fa-square-o').parent().removeClass('facetToggleOff');
          $(item).find('.fa-square-o').parent().addClass('facetToggleOn');
        }
      }
    } );
    $.each($('#facetformat').find('.facetOffset0'), function(index, item) {
      $(item).find('.fa').parent().removeClass('facetToggleOn');
      $(item).find('.fa').parent().addClass('facetToggleOff');
      if( $(item).nextUntil('.facetOffset0').length == $(item).nextUntil('.facetOffset0').find('.facetToggleOn .fa-check-square').length ) {
        $(item).find('.fa-check-square').parent().removeClass('facetToggleOff');
        $(item).find('.fa-check-square').parent().addClass('facetToggleOn');
      } else if( $(item).nextUntil('.facetOffset0').find('.facetToggleOn .fa-check-square').length > 0 ) {
        $(item).find('.fa-minus-square-o').parent().removeClass('facetToggleOff');
        $(item).find('.fa-minus-square-o').parent().addClass('facetToggleOn');
      } else {
        $(item).find('.fa-square-o').parent().removeClass('facetToggleOff');
        $(item).find('.fa-square-o').parent().addClass('facetToggleOn');
      }
    } );
    // turn on all of the needed checkmarks
    $.each($('.panel-advSearchAccordion'), function(index, item) {
      if( $(item).find('.facetToggleOn .fa-check-square,.facetToggleOn.showCheck .fa-check-circle').length > 0 ) {
        $(item).find('.greenCheck').css('display', 'inline-block');
      } else {
        $(item).find('.greenCheck').css('display', 'none');
      }
    } );
  }
</script>